:root {
  --headerHeight: 16rem;
  --footerHeight: 18rem;
  --fullHeight: calc(100vh - var(--headerHeight) - var(--footerHeight));
  --defaultFullWidth: 92.5vw;
  --fullWidth: var(--defaultFullWidth);
  --defaultGridContent: calc(100vw - 6rem);
  --gridContent: var(--defaultGridContent);

  --yellow: #cda61a;
  --red: #e32727;
  --green: #3ea317;
  --blue: #1aa2cd;
  --fastAnim: 0.15s;
  --normalAnim: 0.3s;
  --longAnim: 1.0s;
  --msgShowing: 3s;
  /* Color section */
  --brand: 215deg;

  --mainBg: hsl(var(--brand), 50%, 3%);
  --transparentBg: rgba(0, 0, 0, 0.1);
  --mainText: white;
  --darkBorder: hsla(var(--brand), 12%, 16%, 0.5);
  --darkShadow: hsl(var(--brand), 10%, 35%);
  --accent: hsl(var(--brand), 60%, 51%);
  --secondary: hsl(var(--brand), 15%, 35%);
  --accentGreen: #379b00;
  --accentRed: #cb3a3a;
  --lightBlueBg: hsl(var(--brand), 19%, 48%);
  --taskBg: hsla(var(--brand), 10%, 17%, 0.5);
  --gradientLight: #5a73f2;
  --gradientDark: #0f0b30;
  --infoRectBg: hsla(var(--brand), 40%, 13%, 0.5);
  --lightBorder: rgba(227, 227, 227, 0.35);
  --popupBg: #343434;
  --marker: hsl(var(--brand), 100%, 90%);
  --msgBg: var(--mainBg);
  --focusBorder: #d1d1d1;
  --focusBg: hsl(var(--brand), 10%, 18%);
  accent-color: var(--accent);
  --onboardBg1: #7FA1F71A;
  --onboardBg2: #D0F0FD14;
  --onboardOpacity: 0.5;
}

html { font-size: 1.25vmin; }

@media (prefers-color-scheme: light) {
  :root {
    --mainBg: hsl(var(--brand), 30%, 98%);
    --transparentBg: rgba(255, 255, 255, 0.2);
    --mainText: black;
    --darkBorder: hsla(var(--brand), 60%, 90%, 0.5);
    --darkShadow: hsl(var(--brand), 35%, 85%);
    /*--accent: #699ade;*/
    --secondary: hsl(var(--brand), 17%, 55%);
    /*--accentGreen: #54c416;
    --accentRed: #ef5353;*/
    --lightBlueBg: hsl(var(--brand), 67%, 82%);
    --taskBg: hsla(var(--brand), 52%, 91%, 0.5);
    /*--gradientLight: #9aaafa;*/
    --gradientDark: #463e8c;
    --infoRectBg: hsla(var(--brand), 20%, 96%, 0.5);
    --lightBorder: rgb(174, 174, 174, 0.35);
    --popupBg: var(--mainBg);
    --marker: hsl(var(--brand), 100%, 75%);
    --msgBg: #232323;
    --focusBorder: #626262;
    --focusBg: hsl(var(--brand), 59%, 92%);
    --onboardBg1: #7FA1F761;
    --onboardBg2: #D0F0FD61;
    --onboardOpacity: 0.85;
  }
}

@media (pointer: fine) and (hover: hover) {
  button, input:not(:disabled), select:not(:disabled), [role="button"] {
    cursor: pointer;
  }
  input[type="text"]:not(:disabled) { cursor: text; }
  input[type="range"]:not(:disabled) { cursor: grab; }
  input[type="range"]:focus-visible {
    outline: var(--accent) solid medium;
    outline-offset: -0.7rem;
  }
  input:hover:not(:disabled), select:hover:not(:disabled) {
    --border: var(--focusBorder);
  }
  input:-webkit-autofill:hover, input:autofill:hover {
    --border: var(--mainText);
  }
  input:focus, select:focus {
    --border: var(--accent);
    outline: white solid thin;
  }
  button:hover { filter: brightness(0.8); }
  button:focus-visible, [role="button"]:focus-visible {
    border-color: var(--mainText) !important;
  }
  [role="button"]:hover:not(:disabled), [role="button"]:focus,
  [role="button"]:not(:focus):focus-within {
    background-color: var(--focusBg);
  }
  button:active, [role="button"]:active { transform: scale(0.97); }
  button.emojiBtn:active { transform: scale(0.93); }

  @media (prefers-reduced-motion: no-preference) {
    button:hover { transform: scale(0.97); }
    button:active, button.emojiBtn:hover { transform: scale(0.93); }
    button.emojiBtn:active { transform: scale(0.78); }
    button:disabled:hover { transform: none; }
  }
}

@media (pointer: coarse) and (prefers-reduced-motion: no-preference) {
  button:active, [role="button"]:active {transform: scale(0.95); }
  button.emojiBtn:active { transform: scale(0.89); }
  button:disabled:active { transform: none; }
}

@media (prefers-reduced-motion: reduce) {
  :root {
    --fastAnim: 0;
    --normalAnim: 0;
    --longAnim: 4s;
    --msgShowing: 0;
  }
  .hidePrevPage { opacity: 0; }
}

@media (orientation: portrait) {
  .floatingMsg.notFixed { min-height: 17rem; }
}

@media (max-height: 675px) and (orientation: portrait) and (max-aspect-ratio: 12 / 16) {
  :root {
    --defaultFullWidth: 93.2vw;
    --headerHeight: 13rem;
    --footerHeight: 14rem;
  }
  html { font-size: 1.15vmin; }
}

@media (min-width: 470px) {
  :root {
    --fullWidth: 450px;
    --gridContent: var(--fullWidth);
  }
  html { font-size: 0.65vmin; }
}

@media (min-width: 470px) and (orientation: portrait) {
  :root { --fullWidth: 75vw; }
}

.historyMonth > h4 { height: 1.87em; }

@media (min-width: 935px) and (orientation: landscape) {
  :root { --gridContent: calc(var(--fullWidth) * 2 + 3rem); }
  .doubleColumns:not(.center) {
    display: flex; min-height: fit-content;
    flex-direction: row !important;
    flex-wrap: wrap;
    justify-content: space-between;
    align-content: baseline;
  }
  .doubleColumns { width: var(--gridContent); }
  .floatingMsg.notFixed { min-height: 13rem; }
  .historyMonth > h4 { height: 1.7em; }
  .historyMonth > h4 > .emojiSymbol { margin-top: 0.5rem; }
}

.doubleColumns > * {
  width: var(--fullWidth);
  margin-top: 0; margin-left: 0; margin-right: 0;
}
.doubleColumns > .fullHeight { min-height: var(--fullHeight); }

body, .page, #settings, #popup, noscript {
  width: 100vw; height: 100vh;
  height: stretch;
  height: -webkit-fill-available;
  height: 100svh;
  overflow: hidden;
  background-color: var(--mainBg);
  color: var(--mainText);
  margin: 0;
}
noscript {
  position: fixed;
  z-index: 999;
}
.page, #settings {
  position: fixed;
  display: grid;
  top: 0; left: 0;
  grid-template-areas:
    "... header ..."
    "... content ..."
    "footer footer footer"
  ;
  grid-template-rows: var(--headerHeight) 1fr var(--footerHeight);
  grid-template-columns: minmax(3rem, 1fr) var(--gridContent) minmax(3rem, 1fr);
}
.compress .page, .compress #settings {
  --headerHeight: 15rem;
  --footerHeight: 17rem;
  --fullHeight: calc(100vh - var(--headerHeight) - var(--footerHeight));
  /*background-image: linear-gradient(180deg, var(--accent) 0.35%, transparent 0%);*/
}
#settings {
  z-index: 1;
  --footerHeight: 0 !important;
  transform: translateX(100vw);
  transition: transform var(--normalAnim) cubic-bezier(.22,.61,.36,1);
}
#settings > .content > *:last-child:not(.doubleColumns) {
  margin-bottom: 4rem;
}
.page {
  transform: translateX(100vw);
  transition: transform var(--normalAnim) cubic-bezier(.86,0,.07,1);
  background-size: cover;
}
.basic { transition-duration: calc(var(--normalAnim) * 2); }
.showing { transform: translateX(0); }
.hidePrevPage { transform: translateX(-35vw); }
.basic.hidePrevPage { transform: translateX(-100vw); }

.basic .emojiSymbol {
  animation: rotation calc(var(--normalAnim) * 6) linear infinite;
}
.basic.hidePrevPage .emojiSymbol {
  animation-play-state: paused;
}
@keyframes rotation {
  100% { transform: rotateZ(1turn); }
}

.error {
  position: fixed;
  z-index: 999;
}

.header { grid-area: header; }
.content { grid-area: content; }
.footer { grid-area: footer; }

.header, .content, .footer, .task, .floatingMsg, #infoBackground,
.dataLine {
  display: flex;
}
.header > h1, .header > h4 {
  margin-right: auto;
  line-height: 1.2;
}
.content {
  flex-direction: column;
  align-items: start;
  overflow: hidden auto;
  scroll-snap-type: y mandatory;
}
.content > .content {
  width: 100%; height: 100%;
}
.content, .hiddenScroll {
  scrollbar-width: none;
}
.content::-webkit-scrollbar, .hiddenScroll::-webkit-scrollbar {
  width: 0; height: 0;
}
.header, .footer, .content.center, .floatingMsg {
  align-items: center;
}
.footer, .center {
  justify-content: center;
}
.center {
  align-items: center;
  text-align: center;
}
.center > h2 { margin: 3rem; }
.center > *:not(.content) {
  margin-left: 6rem !important;
  margin-right: 6rem !important;
}
.center > *:last-child:not(.content):not(.floatingMsg) {
  margin-bottom: 3rem !important;
}
.slider {
  flex-direction: row;
  scroll-snap-type: x mandatory;
}
.slider > .content { min-width: 100%; height: 100%; }
.abs { position: absolute; }

.highlightBg {
  height: var(--fullWidth);
  background-image: radial-gradient(#7070c570, transparent 70%);
}

#transfer {
  background-image: linear-gradient(180deg, var(--onboardBg1) 0%, var(--onboardBg2) 100%);
}
#onboardingBg {
  filter: blur(70px); opacity: var(--onboardOpacity);
}
.content.circle {
  --sCoef: 0.75; --wCoef: 1; --hCoef: 1.4; --x: 0; --y: 0; --dx: 0; --dy: 0;
  width: calc(var(--sCoef) * var(--wCoef) * var(--fullWidth));
  height: calc(var(--sCoef) * var(--hCoef) * var(--fullWidth));
  background-image: linear-gradient(180deg, var(--colr1) 0%, var(--colr2) 100%);
  transform: translate(
    calc(var(--x) * 1rem + var(--dx) * 1rem), calc(var(--y) * 1rem + var(--dy) * 1rem)
  );
  border-radius: 50%; --t: 7;
  animation: circleRotation calc(var(--longAnim) * var(--t)) linear infinite;
}
.circle:nth-child(1) {
  --hCoef: 1.25; --colr1: #AEF7E1; --colr2: #B6D9F9; --x: -57; --y: 19; --t: 14; opacity: 0.7;
}
.circle:nth-child(2) {
  --colr1: #ADF1F6; --colr2: #9CCBF6; --x: 15; --y: -16; --t: 10;
}
.circle:nth-child(3) {
  background-image: radial-gradient(50% 50% at 50% 50%, #FF2E00B3 0%, rgba(255, 46, 0, 0) 81.25%);
  --sCoef: 1.1; --hCoef: 1.1; --x: 0; --y: 6; opacity: 0.85;
}
.circle:nth-child(4) {
  --hCoef: 1.1; --colr1: #B090F3; --colr2: #CEE5FB; --x: 36; --y: 27; --t: 18; opacity: 0.8;
}

@keyframes circleRotation {
  25% { transform:
    translate(calc(var(--x) * 1rem + 15rem), calc(var(--y) * 1rem - 15rem)) rotateZ(0.25turn);
  }
  50% { transform:
    translate(calc(var(--x) * 1rem + 30rem), calc(var(--y) * 1rem + 0rem)) rotateZ(0.5turn);
  }
  75% { transform:
    translate(calc(var(--x) * 1rem + 15rem), calc(var(--y) * 1rem + 15rem)) rotateZ(0.75turn);
  }
  100% { transform:
    translate(calc(var(--x) * 1rem), calc(var(--y) * 1rem)) rotateZ(1turn);
  }
}

body, .content, h1, h2, h3, h4, p, button {
  margin: 0;
  font-family: Arial, "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", sans-serif;
  -webkit-user-select: none;
  user-select: none;
}

h1, h4 {
  font-size: 6rem;
}
h2 {
  font-size: 4.9rem;
  margin: 1rem;
  line-height: 1.2;
}
h3 {
  font-size: 3.8rem;
  margin: 1rem;
  line-height: 1.17;
}
p {
  font-size: 2.5rem;
  margin: 0 1rem;
  line-height: 1.12;
}
.emoji {
  font-size: 9rem;
}
.emojiSymbol {
  height: 1.1em; width: 1.1em;
  margin: 0.15em 0.1em;
  vertical-align: -0.3em;
  color: transparent;
  display: inline-block;
  background-position: center;
  background-size: contain;
  background-repeat: no-repeat;
}
p > .emojiSymbol {
  margin-top: 0; margin-bottom: 0;
}
strong {
  background-color: var(--accent);
  padding: 0.4rem 1.2rem;
  border-radius: 1.5rem;
  font-weight: bold;
  color: white;
}

button, .floatingMsg {
  box-sizing: border-box;
  background-origin: border-box;
}

button, .floatingMsg {
  border-radius: 2.5rem;
  border: 0.9rem solid var(--darkBorder);
  margin: 2.5rem 1.5rem;
}
.content > button {
  margin: 2rem 0;
}

button, [role="button"] { outline: none !important; }
[role="button"] {
  transition: background-color var(--fastAnim),
    transform var(--normalAnim), border-color var(--normalAnim);
}
button {
  min-height: 11.9rem;
  font-size: 4.3em;
  font-weight: 700;
  padding: 2rem 4rem 2rem 3rem;
  color: white; --bgColor: var(--accent);
  background-color: var(--bgColor) !important;
  line-height: 1.3;
  transition: filter var(--fastAnim),
    transform var(--normalAnim), border-color var(--normalAnim);
}
.compress button {
  min-height: 11.5rem;
  padding: 1.5rem 4rem 1.5rem 3rem;
}
button.smallBtn {
  min-height: 7.87rem;
  font-size: 4em;
  padding: 0 2rem 0 1.5rem;
  margin: 0;
  border-color: transparent;
}
button.noEmoji {
  padding-right: 3rem;
}
button.emojiBtn {
  min-height: 0;
  font-size: 5em;
  --bgColor: transparent;
  border-color: transparent;
  margin: 0;
  padding: 0 1rem;
  line-height: 1.2;
}
button.secondary {
  --bgColor: var(--secondary);
}
button.success {
  --bgColor: var(--accentGreen);
}
button.danger {
  --bgColor: var(--accentRed);
}
button.transparent {
  color: var(--mainText);
  --bgColor: var(--transparentBg);
}
button:disabled, [disabled]:not(input, select) {
  filter: grayscale(1);
  cursor: default;
}

.floatingMsg:not(.notFixed) {
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  margin: 0 !important;
}

.floatingMsg {
  width: var(--gridContent);
  background-color: var(--lightBlueBg);
  bottom: var(--footerHeight);
}
.floatingMsg.notFixed { margin: 1rem 0; }
.floatingMsg h3 {
  margin: 3rem;
  text-align: left;
}
.floatingMsg button {
  margin-left: auto;
  margin-right: 3rem;
}
